#  Octopus Pro boards STM32H723.  Select the appropriate micro-controller in "make
# menuconfig" and select "Enable low-level configuration options". For
#  For STM32H723 boards use a "128KiB bootloader" and a "25Mhz crystal"
# See docs/Config_Reference.md for a description of parameters.
[exclude_object]
[include macros/macro.cfg]
[include config/fan.cfg]
[include config/stepper.cfg]
[include config/led.cfg]
[include mainsail.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT
[respond]   #activate messages
[gcode_arcs]  #activate round corner
resolution: 0.1
[force_move]
enable_force_move: True

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 10.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 25.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 0.50   ; the value to retract while PAUSE
variable_cancel_retract   : 0.80   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 0.80   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 10  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 10  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : True ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor fs_extruder"    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

########################
########################
### Printer
########################

[printer]
kinematics: corexy
max_velocity: 600
max_accel: 60000
minimum_cruise_ratio: 0.7
max_z_velocity: 30
max_z_accel: 2000
square_corner_velocity: 7

[input_shaper]
shaper_freq_x: 132.6
shaper_type_x: ei
damping_ratio_x: 0.043
shaper_freq_y: 92.0
shaper_type_y: ei
damping_ratio_y: 0.041

[mcu host]
serial: /tmp/klipper_host_mcu

[mcu]
canbus_uuid: 59469bda118c

[mcu EBBCan]
canbus_uuid: 7923f36815fd

[temperature_sensor Octopus]
sensor_type: temperature_mcu
max_temp: 100

[temperature_sensor raspberry_pi_4B]
sensor_type: temperature_host
min_temp: 10
max_temp: 100 

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    # Somewhere slightly above the middle of your print bed
    115,115, 20
########################
########################
### Extruder
########################
[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 22 
Gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
control: pid
pid_Kp: 23.216 
pid_Ki: 1.629 
pid_Kd: 82.712
min_temp: 0
max_temp: 450

sensor_type:MAX31865
sensor_pin: EBBCan: PA4
spi_bus: spi1
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2

max_extrude_only_distance: 250.0
max_extrude_cross_section: 250
#pressure_advance: 0.02
#pressure_advance_smooth_time: 0.03

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.85
stealthchop_threshold: 0


########################
########################
### Heatbed
########################

[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # TB
sensor_type: ATC Semitec 104GT-2
min_temp: 0
max_temp: 130
control: pid
pid_kp: 54.122
pid_ki: 2.864
pid_kd: 255.727
max_power: 0.7

########################
########################
### Cartographer
########################

[scanner]
canbus_uuid: 7dd159b0a935       
x_offset: 0
y_offset: 23    
#scanner_touch_threshold: 800 #800ht Ideal 
calibration_method: touch
sensor: cartographer
sensor_alt: carto
speed: 2.
lift_speed: 5.0
backlash_comp: 0.00915
cal_nozzle_z: 0.1
cal_floor: 0.1
cal_ceil:5.
cal_speed: 1.0
cal_move_speed: 10.
default_model_name: default
mesh_main_direction: x
mesh_cluster_size: 1
mesh_runs: 2
samples_result: median
scanner_touch_accel: 100
scanner_touch_max_speed: 10
scanner_touch_speed: 2
scanner_touch_retract_dist: 2
scanner_touch_retract_speed: 10
scanner_touch_sample_count: 10
#scanner_touch_tolerance: 0.1
scanner_touch_max_retries: 5
scanner_touch_move_speed: 50
#scanner_touch_z_offset: 0.05 # instead of having it in your print start - touch only
########################
########################
### Bed Mesh
########################

[bed_mesh]
speed: 400
horizontal_move_z: 5

mesh_min: 12, 23
mesh_max: 207, 195
mesh_pps: 0,0
move_check_distance: 3
probe_count: 30,30
algorithm: bicubic
zero_reference_position: 115,115

[safe_z_home]
home_xy_position: 110, 91.5
speed: 100.0
z_hop: 5
z_hop_speed: 5

[screws_tilt_adjust]
screw1: 27, 0
screw1_name: vorne links
screw2: 27, 175
screw2_name: hinten links
screw3: 196, 175
screw3_name: hinten rechts
screw4: 196, 0
screw4_name: vorne rechts
speed: 200
horizontal_move_z: 5
screw_thread: CW-M4
#   The type of screw used for bed leveling, M3, M4, or M5, and the
#   rotation direction of the knob that is used to level the bed.
#   Accepted values: CW-M3, CCW-M3, CW-M4, CCW-M4, CW-M5, CCW-M5.
#   Default value is CW-M3 which most printers use. A clockwise
#   rotation of the knob decreases the gap between the nozzle and the
#   bed. Conversely, a counter-clockwise rotation increases the gap.


[axis_twist_compensation]
speed: 100
calibrate_start_x: 25
calibrate_end_x: 202
calibrate_y: 95

#[neopixel my_neopixel_1]
#pin: PE10

#[neopixel my_neopixel_2]
#pin: PE9

########################
########################
### Motor Sync
########################
[motors_sync]
axes: x,y
#    Axes on which calibration will be performed.
accel_chip: adxl345
#    Accelerometers for vibration collection: adxl345 / mpu9250 / lis2dw,
#    etc. Are indicated general or for axis on which calibration is
#    performed, for example - accel_chip_x or accel_chip_y.
#microsteps: 16
#    Maximum microstepping displacement of the stepper motor rotor. It's
#    not necessary to increase the value above 16 with 20t pulley, these
#    fluctuations are elusive.
#model: linear
#    Model of the dependence of the displacement of microsteps on the
#    shaft of a stepper motor depends on the magnitude of the measured
#    oscillations. Are indicated general or for axis. Supported models:
#    linear, quadratic, power, root, hyperbolic, exponential.
#model_coeffs: 20000, 0
#    Coefficients above the described model, for calculating microsteps.
#    Are indicated general or for axis.
#max_step_size: 5
#    The maximum number of microsteps that the motor can take move at time,
#    to achieve the planned magnitude.
#retry_tolerance: 0
#    The forced threshold to which a pair of stepper motors on one belt
#    will have to lower the magnitude of the oscillations. It's recommended
#    to configure in order to filter possible inaccuracies. After several
#    iterations of starting synchronization, you will find the edge, to
#    which this parameter should be omitted.
#retries: 0
#    Maximum number of repetitions to achieve a forced threshold of motor
#    synchronization deviations.
model: exponential
model_coeffs:
    16788.0629109204,
    0.0854498043,
    -17471.9711482420


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [scanner model default]
#*# model_coef = 1.367231755487131,
#*# 	1.8109977102474466,
#*# 	0.7715318479361208,
#*# 	0.10488644753462327,
#*# 	0.3567430115032834,
#*# 	1.2974176060801061,
#*# 	-0.33693120971072404,
#*# 	-1.6809336771914958,
#*# 	0.3867931804234401,
#*# 	0.9150424427371009
#*# model_domain = 3.1388902473868104e-07,3.290919039045533e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 50.876871
#*# model_offset = 0.00000
#*#
#*# [scanner]
#*# scanner_touch_z_offset = 0.100
